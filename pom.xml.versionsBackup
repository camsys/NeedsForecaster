<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
		<parent>
			<groupId>com.camsys.assetcloud</groupId>
			<artifactId>CSAssetCloud</artifactId>
			<version>1.4-SNAPSHOT</version>
		</parent>

		<artifactId>NeedsForecaster</artifactId>
		<name>NeedsForecaster</name>
		<description>NeedsForecaster</description>

		<properties>
			<java.version>11</java.version>
			<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		</properties>

		<dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>software.amazon.awssdk</groupId>
					<artifactId>bom</artifactId>
					<version>2.17.5</version>
					<type>pom</type>
					<scope>import</scope>
				</dependency>
			</dependencies>
		</dependencyManagement>

		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-rest</artifactId>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-oauth2-client</artifactId>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-jersey</artifactId>
			</dependency>
			<dependency>
				<groupId>org.springframework.session</groupId>
				<artifactId>spring-session-core</artifactId>
			</dependency>
			<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-security</artifactId>
		    </dependency>
			<dependency>
			    <groupId>org.springframework.boot</groupId>
			    <artifactId>spring-boot-starter-mustache</artifactId>
			</dependency>
			<dependency>
				<groupId>com.github.java-json-tools</groupId>
				<artifactId>json-schema-validator</artifactId>
				<version>2.2.14</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-webflux</artifactId>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-websocket</artifactId>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-oauth2-resource-server</artifactId>
				<version>5.6.1</version>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>com.vladmihalcea</groupId>
				<artifactId>hibernate-types-52</artifactId>
				<version>2.18.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>5.2.2</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>5.2.2</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-oauth2-jose</artifactId>
				<version>5.6.1</version>
			</dependency>
			<dependency>
			    <groupId>org.springframework.boot</groupId>
			    <artifactId>spring-boot-starter-web</artifactId>
			</dependency>
		 	<dependency>
				<groupId>net.oneandone.reflections8</groupId>
				<artifactId>reflections8</artifactId>
				<version>0.11.7</version>
			</dependency>
			 <dependency>
			    <groupId>software.amazon.awssdk</groupId>
			    <artifactId>s3</artifactId>
			</dependency>
			<dependency>
				<groupId>com.camsys.assetcloud</groupId>
				<artifactId>Core</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>

		<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
		 			<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.7.5</version>
						<configuration>
							<workingDirectory>src/main/js/</workingDirectory>
							<installDirectory>${project.build.directory}/.npm</installDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install-node-and-npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>v12.14.1</nodeVersion>
									<npmVersion>7.0.3</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build</arguments>
								</configuration>
								<phase>generate-resources</phase>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>15</source>
							<target>15</target>
						</configuration>
					</plugin>

					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.37.0</version>
						<configuration>
								<images>
										<image>
												<registry>212764437395.dkr.ecr.us-east-1.amazonaws.com</registry>
												<name>needs_forecaster</name>
												<build>
														<dockerFile>${project.basedir}/Dockerfile</dockerFile>
														<args>
															 <version>${project.version}</version>
														</args>
														<tags>
																<tag>${project.version}</tag>
																<tag>latest</tag>
														</tags>
												</build>
										</image>
								</images>
						</configuration>
					</plugin>
				</plugins>
			</build>

</project>
